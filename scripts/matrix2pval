#!/bin/bash

usage() {
    >&2 echo "Usage: $(basename $0) [-t thread] [-s pvalue_script_folder] [-o folder_of_matrix_file]"
    >&2 echo ""
    exit 1
}

while getopts ":t:s:b:c:o:" opt; do
    case $opt in
    t)
        THREAD=$OPTARG
    ;;
    s)
        SCRIPT=$OPTARG
    ;;
    o)
        OUT_FOLDER=$OPTARG
    ;;
    \>)
        >&2 echo "Invalid options: -$OPTARG"
        usage
    ;;
    [?])
        usage
    ;;
    :)
        >&2 echo "Option -$OPTARG requires an argument."
        >&2 echo ""
        usage
    ;;
    esac
done

# check arguments
if [ -z $THREAD ]; then
    THREAD=8
fi 

if [ -z $SCRIPT ];then
    echo "pair2matrix.py script must be provided with -s"
    if [ ! -f $SCRIPT/pvalue_observed.R ]; then 
        echo "pvalue_observed.R file not found in script folder"
        exit 1
    fi
    if [ ! -f $SCRIPT/pvalue_oe.R ]; then
        echo "pvalue_oe.R file not found in script folder"
        exit 1
    fi
    exit 1
fi

if [ -z $OUT_FOLDER ]; then
    echo "must provide a folder containing the pair file dumped by juicer"
    exit 1
fi

# get all input files
INPUT=$(ls ${OUT_FOLDER}/*.matrix | xargs)

# main function
matrix2pval() {
    MATRIX_FILE=$1
    SCRIPT_OBV=$2/pvalue_observed.R
    SCRIPT_OE=$2/pvalue_oe.R
    OUT_FILE=${MATRIX_FILE%.pair}.pvalue
    LOG_FILE=${MATRIX_FILE%.matrix}.log
   
    BASE=$(basename $MATRIX_FILE)
    # K562_chr5_chr19_observed_VC_SQRT_25000.pair
    tmp=${BASE%_observed*}
    tmp=${tmp%_oe*}
    IFS=_ read -r CELL CHR1 CHR2 <<< $tmp
    if [ $CHR1 != $CHR2 ]; then
        Rscript $SCRIPT_OBV $MATRIX_FILE $OUT_FILE >$LOG_FILE 2>&1
    else
        Rscript $SCRIPT_OE $MATRIX_FILE $OUT_FILE >$LOG_FILE 2>&1
    fi
}

# run
export -f matrix2pval

parallel --no-notice -k -j ${THREAD} "matrix2pval {} $SCRIPT " ::: $INPUT

